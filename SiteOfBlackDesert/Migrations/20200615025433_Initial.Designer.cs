// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteOfBlackDesert.Data;

namespace SiteOfBlackDesert.Migrations
{
    [DbContext(typeof(AppDBContent))]
    [Migration("20200615025433_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SiteOfBlackDesert.Data.Models.AlchemyAndCooking", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryAlchemyAndCookingID")
                        .HasColumnType("int");

                    b.Property<string>("descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CategoryAlchemyAndCookingID");

                    b.ToTable("AlchemyAndCooking");
                });

            modelBuilder.Entity("SiteOfBlackDesert.Data.Models.CategoryAlchemyAndCooking", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CategoryAlchemyAndCooking");
                });

            modelBuilder.Entity("SiteOfBlackDesert.Data.Models.CategoryItems", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("categoryitemsname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CategoryItems");
                });

            modelBuilder.Entity("SiteOfBlackDesert.Data.Models.Items", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryItemsID")
                        .HasColumnType("int");

                    b.Property<string>("accuracy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("damage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("damage_reduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("evasion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_favourite")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("protection")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CategoryItemsID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SiteOfBlackDesert.Data.Models.AlchemyAndCooking", b =>
                {
                    b.HasOne("SiteOfBlackDesert.Data.Models.CategoryAlchemyAndCooking", "CategoryAlchemyAndCooking")
                        .WithMany("items")
                        .HasForeignKey("CategoryAlchemyAndCookingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiteOfBlackDesert.Data.Models.Items", b =>
                {
                    b.HasOne("SiteOfBlackDesert.Data.Models.CategoryItems", "CategoryItems")
                        .WithMany("items")
                        .HasForeignKey("CategoryItemsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
